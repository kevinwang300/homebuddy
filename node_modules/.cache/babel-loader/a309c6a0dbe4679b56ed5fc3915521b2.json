{"ast":null,"code":"import _classCallCheck from \"/Users/dangdang98/Documents/homebuddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dangdang98/Documents/homebuddy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dangdang98/Documents/homebuddy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dangdang98/Documents/homebuddy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dangdang98/Documents/homebuddy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dangdang98/Documents/homebuddy/src/Map.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nexport var Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    var directionsService = _this.props && _this.props.google ? new _this.props.google.maps.DirectionsService() : null;\n    var directionsDisplay = _this.props && _this.props.google ? new _this.props.google.maps.DirectionsRenderer() : null;\n    _this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      directionsService: directionsService,\n      directionsDisplay: directionsDisplay\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // console.log(this.props.centerAroundCurrentLocation);\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this2.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // google is available\n        var google = this.props.google;\n        var maps = google.maps; // let directionsService = new maps.DirectionsService();\n        // let directionsDisplay = new maps.DirectionsRenderer();\n\n        var haight = new maps.LatLng(37.7699298, -122.4469157);\n        var oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205);\n        var mapRef = this.refs.map;\n        var node = ReactDOM.findDOMNode(mapRef);\n        var _this$props = this.props,\n            initialCenter = _this$props.initialCenter,\n            zoom = _this$props.zoom; // let {lat, lng} = initialCenter;\n\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          // center: center,\n          center: haight,\n          zoom: zoom\n        });\n        this.map = new maps.Map(node, mapConfig);\n        this.state.directionsDisplay.setMap(this.map);\n        this.calcRoute(); // var directionsService = new google.maps.DirectionsService();\n        // var directionsDisplay = new google.maps.DirectionsRenderer();\n        // var haight = new google.maps.LatLng(37.7699298, -122.4469157);\n        // var oceanBeach = new google.maps.LatLng(37.7683909618184, -122.51089453697205);\n        // var mapOptions = {\n        //     zoom: 14,\n        //     center: haight\n        // }\n        // var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n        // directionsDisplay.setMap(map);\n      }\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var curr = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(curr.lat, curr.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"calcRoute\",\n    value: function calcRoute() {\n      var _this3 = this;\n\n      var google = this.props.google;\n      var maps = google.maps;\n      var haight = new maps.LatLng(37.7699298, -122.4469157);\n      var oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205); // let selectedMode = document.getElementById('mode').value;\n\n      var request = {\n        origin: haight,\n        destination: oceanBeach,\n        // Note that Javascript allows us to access the constant\n        // using square brackets and a string value as its\n        // \"property.\"\n        travelMode: maps.TravelMode['DRIVING']\n      };\n      console.log(this.state);\n      this.state.directionsService.route(request, function (response, status) {\n        console.log('response: ', response);\n        console.log('status: ', status);\n\n        if (status === 'OK') {\n          _this3.state.directionsDisplay.setDirections(response);\n        }\n      });\n    }\n  }, {\n    key: \"buttonClicked\",\n    value: function buttonClicked() {\n      console.log('I have been clicked!');\n      axios.get('/test').then(function (res) {\n        console.log(res.data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mapStyle = {\n        width: '70vw',\n        height: '100vh',\n        float: 'right'\n      };\n      var directionsPanelStyle = {\n        width: '30vw',\n        height: '100vh'\n      };\n      return React.createElement(\"div\", {\n        id: 'map-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: \"map\",\n        style: mapStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Loading map...\"), React.createElement(\"button\", {\n        ref: \"directionsPanel\",\n        style: directionsPanelStyle,\n        onClick: this.buttonClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Loading directions panel...\"));\n    }\n  }]);\n\n  return Map;\n}(Component);\nMap.propTypes = {\n  google: PropTypes.object,\n  zoom: PropTypes.number,\n  initialCenter: PropTypes.object,\n  centerAroundCurrentLocation: PropTypes.bool\n};\nMap.defaultProps = {\n  zoom: 13,\n  // San Francisco, by default\n  initialCenter: {\n    lat: 37.774929,\n    lng: -122.419416\n  },\n  centerAroundCurrentLocation: false\n};","map":{"version":3,"sources":["/Users/dangdang98/Documents/homebuddy/src/Map.js"],"names":["React","Component","ReactDOM","PropTypes","axios","Map","props","initialCenter","lat","lng","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","state","currentLocation","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","loadMap","prevProps","prevState","recenterMap","haight","LatLng","oceanBeach","mapRef","refs","map","node","findDOMNode","zoom","center","mapConfig","Object","assign","setMap","calcRoute","curr","panTo","request","origin","destination","travelMode","TravelMode","console","log","route","response","status","setDirections","get","then","res","data","mapStyle","width","height","float","directionsPanelStyle","buttonClicked","propTypes","object","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nexport class Map extends Component {\n    constructor(props) {\n        super(props);\n\n        const {lat, lng} = this.props.initialCenter;\n\n        const directionsService = this.props && this.props.google ?\n            new this.props.google.maps.DirectionsService() : null;\n\n        const directionsDisplay = this.props && this.props.google ?\n            new this.props.google.maps.DirectionsRenderer() : null;\n\n        this.state = {\n            currentLocation: {\n                lat: lat,\n                lng: lng\n            },\n            directionsService: directionsService,\n            directionsDisplay: directionsDisplay\n        }\n    }\n\n    componentDidMount() {\n        // console.log(this.props.centerAroundCurrentLocation);\n        if (this.props.centerAroundCurrentLocation) {\n            if (navigator && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((pos) => {\n                    const coords = pos.coords;\n                    this.setState({\n                        currentLocation: {\n                            lat: coords.latitude,\n                            lng: coords.longitude\n                        }\n                    })\n                })\n            }\n        }\n        this.loadMap();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n            this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n            this.recenterMap();\n        }\n    }\n\n    loadMap() {\n        if (this.props && this.props.google) {\n            // google is available\n            const {google} = this.props;\n            const maps = google.maps;\n\n            // let directionsService = new maps.DirectionsService();\n            // let directionsDisplay = new maps.DirectionsRenderer();\n\n            let haight = new maps.LatLng(37.7699298, -122.4469157);\n            let oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205);\n\n            const mapRef = this.refs.map;\n            const node = ReactDOM.findDOMNode(mapRef);\n\n            let {initialCenter, zoom} = this.props;\n\n\n            // let {lat, lng} = initialCenter;\n            const {lat, lng} = this.state.currentLocation;\n\n            const center = new maps.LatLng(lat, lng);\n            const mapConfig = Object.assign({}, {\n                // center: center,\n                center: haight,\n                zoom: zoom\n            });\n            this.map = new maps.Map(node, mapConfig);\n            this.state.directionsDisplay.setMap(this.map);\n            this.calcRoute();\n\n\n            // var directionsService = new google.maps.DirectionsService();\n            // var directionsDisplay = new google.maps.DirectionsRenderer();\n            // var haight = new google.maps.LatLng(37.7699298, -122.4469157);\n            // var oceanBeach = new google.maps.LatLng(37.7683909618184, -122.51089453697205);\n            // var mapOptions = {\n            //     zoom: 14,\n            //     center: haight\n            // }\n            // var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n            // directionsDisplay.setMap(map);\n        }\n    }\n\n    recenterMap() {\n        const map = this.map;\n        const curr = this.state.currentLocation;\n\n        const google = this.props.google;\n        const maps = google.maps;\n\n        if (map) {\n            let center = new maps.LatLng(curr.lat, curr.lng);\n            map.panTo(center);\n        }\n    }\n\n    calcRoute() {\n        const google = this.props.google;\n        const maps = google.maps;\n\n        let haight = new maps.LatLng(37.7699298, -122.4469157);\n        let oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205);\n\n        // let selectedMode = document.getElementById('mode').value;\n        let request = {\n            origin: haight,\n            destination: oceanBeach,\n            // Note that Javascript allows us to access the constant\n            // using square brackets and a string value as its\n            // \"property.\"\n            travelMode: maps.TravelMode['DRIVING']\n        };\n\n        console.log(this.state);\n\n        this.state.directionsService.route(request, (response, status) => {\n            console.log('response: ', response);\n            console.log('status: ', status);\n            if (status === 'OK') {\n                this.state.directionsDisplay.setDirections(response);\n            }\n        });\n    }\n\n    buttonClicked() {\n        console.log('I have been clicked!');\n        axios.get('/test')\n            .then(res => {\n                console.log(res.data);\n            })\n    }\n\n    render() {\n        const mapStyle = {\n            width: '70vw',\n            height: '100vh',\n            float: 'right'\n        };\n\n        const directionsPanelStyle = {\n            width: '30vw',\n            height: '100vh'\n        };\n\n        return (\n            <div id={'map-container'}>\n                <div ref='map' style={mapStyle}>\n                    Loading map...\n                </div>\n                <button ref='directionsPanel' style={directionsPanelStyle} onClick={this.buttonClicked}>\n                    Loading directions panel...\n                </button>\n            </div>\n        )\n    }\n}\n\nMap.propTypes = {\n    google: PropTypes.object,\n    zoom: PropTypes.number,\n    initialCenter: PropTypes.object,\n    centerAroundCurrentLocation: PropTypes.bool\n};\n\nMap.defaultProps = {\n    zoom: 13,\n    // San Francisco, by default\n    initialCenter: {\n        lat: 37.774929,\n        lng: -122.419416\n    },\n    centerAroundCurrentLocation: false\n};\n"]},"metadata":{},"sourceType":"module"}