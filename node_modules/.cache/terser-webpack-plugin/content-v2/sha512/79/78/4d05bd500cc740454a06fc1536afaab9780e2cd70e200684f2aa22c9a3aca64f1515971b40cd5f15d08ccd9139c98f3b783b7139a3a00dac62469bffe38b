{"map":"{\"version\":3,\"sources\":[\"/Users/dangdang98/Documents/homebuddy/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/dangdang98/Documents/homebuddy/src/logo.svg\",\"/Users/dangdang98/Documents/homebuddy/src/App.js\",\"/Users/dangdang98/Documents/homebuddy/src/Map.js\",\"/Users/dangdang98/Documents/homebuddy/src/Container.js\",\"/Users/dangdang98/Documents/homebuddy/src/serviceWorker.js\",\"/Users/dangdang98/Documents/homebuddy/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Component\",\"Map\",\"_Component\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"_this$props$initialCe\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"initialCenter\",\"lat\",\"lng\",\"directionsService\",\"google\",\"maps\",\"DirectionsService\",\"directionsDisplay\",\"DirectionsRenderer\",\"state\",\"currentLocation\",\"inherits\",\"createClass\",\"key\",\"value\",\"_this2\",\"centerAroundCurrentLocation\",\"navigator\",\"geolocation\",\"getCurrentPosition\",\"pos\",\"coords\",\"setState\",\"latitude\",\"longitude\",\"loadMap\",\"prevProps\",\"prevState\",\"recenterMap\",\"haight\",\"LatLng\",\"mapRef\",\"refs\",\"map\",\"node\",\"ReactDOM\",\"findDOMNode\",\"_this$props\",\"zoom\",\"_this$state$currentLo\",\"mapConfig\",\"assign\",\"center\",\"setMap\",\"calcRoute\",\"curr\",\"panTo\",\"_this3\",\"request\",\"origin\",\"destination\",\"travelMode\",\"TravelMode\",\"console\",\"log\",\"route\",\"response\",\"status\",\"setDirections\",\"axios\",\"get\",\"then\",\"res\",\"data\",\"react_default\",\"a\",\"createElement\",\"id\",\"ref\",\"style\",\"width\",\"height\",\"float\",\"onClick\",\"buttonClicked\",\"defaultProps\",\"Container\",\"apply\",\"arguments\",\"Map_Map\",\"GoogleApiWrapper\",\"apiKey\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"render\",\"src_Container\",\"document\",\"getElementById\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n  componentDidMount() {\\n    const script = document.createElement(\\\"script\\\");\\n\\n    script.src = \\\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDfaCamdV4CSw1jBTG8NZeem0YG6kguM3s&callback=initMap\\\";\\n    script.async = true;\\n    script.defer = true;\\n  }\\n\\n  render() {\\n    // let map = new google.maps.Map(document.getElementById('map'), {\\n    //   center: {lat: -34.397, lng: 150.644},\\n    //   zoom: 8\\n    // });\\n\\n    return (\\n        <div id={\\\"map\\\"}></div>\\n      // <div className=\\\"App\\\">\\n      //   <header className=\\\"App-header\\\">\\n      //     <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n      //     <p>\\n      //       Edit <code>src/App.js</code> and save to reload.\\n      //     </p>\\n      //     <a\\n      //       className=\\\"App-link\\\"\\n      //       href=\\\"https://reactjs.org\\\"\\n      //       target=\\\"_blank\\\"\\n      //       rel=\\\"noopener noreferrer\\\"\\n      //     >\\n      //       Learn React\\n      //     </a>\\n      //   </header>\\n      // </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport PropTypes from 'prop-types';\\nimport axios from 'axios';\\n\\nexport class Map extends Component {\\n    constructor(props) {\\n        super(props);\\n\\n        const {lat, lng} = this.props.initialCenter;\\n\\n        const directionsService = this.props && this.props.google ?\\n            new this.props.google.maps.DirectionsService() : null;\\n\\n        const directionsDisplay = this.props && this.props.google ?\\n            new this.props.google.maps.DirectionsRenderer() : null;\\n\\n        this.state = {\\n            currentLocation: {\\n                lat: lat,\\n                lng: lng\\n            },\\n            directionsService: directionsService,\\n            directionsDisplay: directionsDisplay\\n        }\\n    }\\n\\n    componentDidMount() {\\n        // console.log(this.props.centerAroundCurrentLocation);\\n        if (this.props.centerAroundCurrentLocation) {\\n            if (navigator && navigator.geolocation) {\\n                navigator.geolocation.getCurrentPosition((pos) => {\\n                    const coords = pos.coords;\\n                    this.setState({\\n                        currentLocation: {\\n                            lat: coords.latitude,\\n                            lng: coords.longitude\\n                        }\\n                    })\\n                })\\n            }\\n        }\\n        this.loadMap();\\n    }\\n\\n    componentDidUpdate(prevProps, prevState) {\\n        if (prevProps.google !== this.props.google) {\\n            this.loadMap();\\n        }\\n        if (prevState.currentLocation !== this.state.currentLocation) {\\n            this.recenterMap();\\n        }\\n    }\\n\\n    loadMap() {\\n        if (this.props && this.props.google) {\\n            // google is available\\n            const {google} = this.props;\\n            const maps = google.maps;\\n\\n            // let directionsService = new maps.DirectionsService();\\n            // let directionsDisplay = new maps.DirectionsRenderer();\\n\\n            let haight = new maps.LatLng(37.7699298, -122.4469157);\\n            let oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205);\\n\\n            const mapRef = this.refs.map;\\n            const node = ReactDOM.findDOMNode(mapRef);\\n\\n            let {initialCenter, zoom} = this.props;\\n\\n\\n            // let {lat, lng} = initialCenter;\\n            const {lat, lng} = this.state.currentLocation;\\n\\n            const center = new maps.LatLng(lat, lng);\\n            const mapConfig = Object.assign({}, {\\n                // center: center,\\n                center: haight,\\n                zoom: zoom\\n            });\\n            this.map = new maps.Map(node, mapConfig);\\n            this.state.directionsDisplay.setMap(this.map);\\n            this.calcRoute();\\n\\n\\n            // var directionsService = new google.maps.DirectionsService();\\n            // var directionsDisplay = new google.maps.DirectionsRenderer();\\n            // var haight = new google.maps.LatLng(37.7699298, -122.4469157);\\n            // var oceanBeach = new google.maps.LatLng(37.7683909618184, -122.51089453697205);\\n            // var mapOptions = {\\n            //     zoom: 14,\\n            //     center: haight\\n            // }\\n            // var map = new google.maps.Map(document.getElementById('map'), mapOptions);\\n            // directionsDisplay.setMap(map);\\n        }\\n    }\\n\\n    recenterMap() {\\n        const map = this.map;\\n        const curr = this.state.currentLocation;\\n\\n        const google = this.props.google;\\n        const maps = google.maps;\\n\\n        if (map) {\\n            let center = new maps.LatLng(curr.lat, curr.lng);\\n            map.panTo(center);\\n        }\\n    }\\n\\n    calcRoute() {\\n        const google = this.props.google;\\n        const maps = google.maps;\\n\\n        let haight = new maps.LatLng(37.7699298, -122.4469157);\\n        let oceanBeach = new maps.LatLng(37.7683909618184, -122.51089453697205);\\n\\n        // let selectedMode = document.getElementById('mode').value;\\n        let request = {\\n            origin: haight,\\n            destination: oceanBeach,\\n            // Note that Javascript allows us to access the constant\\n            // using square brackets and a string value as its\\n            // \\\"property.\\\"\\n            travelMode: maps.TravelMode['DRIVING']\\n        };\\n\\n        console.log(this.state);\\n\\n        this.state.directionsService.route(request, (response, status) => {\\n            console.log('response: ', response);\\n            console.log('status: ', status);\\n            if (status === 'OK') {\\n                this.state.directionsDisplay.setDirections(response);\\n            }\\n        });\\n    }\\n\\n    buttonClicked() {\\n        console.log('I have been clicked!');\\n        axios.get('/test')\\n            .then(res => {\\n                console.log(res.data);\\n            })\\n    }\\n\\n    render() {\\n        const mapStyle = {\\n            width: '70vw',\\n            height: '100vh',\\n            float: 'right'\\n        };\\n\\n        const directionsPanelStyle = {\\n            width: '30vw',\\n            height: '100vh'\\n        };\\n\\n        return (\\n            <div id={'map-container'}>\\n                <div ref='map' style={mapStyle}>\\n                    Loading map...\\n                </div>\\n                <button ref='directionsPanel' style={directionsPanelStyle} onClick={this.buttonClicked}>\\n                    Load directions panel...kevon\\n                </button>\\n            </div>\\n        )\\n    }\\n}\\n\\nMap.propTypes = {\\n    google: PropTypes.object,\\n    zoom: PropTypes.number,\\n    initialCenter: PropTypes.object,\\n    centerAroundCurrentLocation: PropTypes.bool\\n};\\n\\nMap.defaultProps = {\\n    zoom: 13,\\n    // San Francisco, by default\\n    initialCenter: {\\n        lat: 37.774929,\\n        lng: -122.419416\\n    },\\n    centerAroundCurrentLocation: false\\n};\\n\",\"import React, { Component } from 'react';\\nimport axios from 'axios';\\nimport { GoogleApiWrapper } from 'google-maps-react';\\nimport { Map } from './Map';\\n\\nexport class Container extends Component {\\n    componentDidMount() {\\n        console.log('mounting!');\\n        axios.get('/ping')\\n            .then(res => {\\n                console.log(res.data);\\n            })\\n    }\\n\\n    buttonClicked() {\\n        console.log('I have been clicked!');\\n        axios.get('/test')\\n            .then(res => {\\n                console.log(res.data);\\n            })\\n    }\\n\\n    render() {\\n        const style = {\\n            width: '100vw',\\n            height: '100vh'\\n        };\\n\\n        console.log(this.props);\\n\\n        return (\\n            <div style={style}>\\n                <Map google={this.props.google} />\\n                {/*<button type=\\\"button\\\" onClick={this.buttonClicked}>Click Me!</button>*/}\\n                {/*<div>what is going on</div>*/}\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default GoogleApiWrapper({\\n    apiKey: \\\"AIzaSyDfaCamdV4CSw1jBTG8NZeem0YG6kguM3s\\\"\\n})(Container)\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport Container from './Container';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<Container />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(e,t,o){e.exports=o(64)},26:function(e,t,o){},28:function(e,t,o){e.exports=o.p+\"static/media/logo.5d5d9eef.svg\"},29:function(e,t,o){},64:function(e,t,o){\"use strict\";o.r(t);var n=o(0),a=o.n(n),i=o(2),r=o.n(i),s=(o(26),o(4)),c=o(5),l=o(7),p=o(6),u=o(8),g=(o(28),o(29),n.Component,o(10)),d=o.n(g),h=o(20),v=function(e){function t(e){var o;Object(s.a)(this,t);var n=(o=Object(l.a)(this,Object(p.a)(t).call(this,e))).props.initialCenter,a=n.lat,i=n.lng,r=o.props&&o.props.google?new o.props.google.maps.DirectionsService:null,c=o.props&&o.props.google?new o.props.google.maps.DirectionsRenderer:null;return o.state={currentLocation:{lat:a,lng:i},directionsService:r,directionsDisplay:c},o}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.props.centerAroundCurrentLocation&&navigator&&navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(t){var o=t.coords;e.setState({currentLocation:{lat:o.latitude,lng:o.longitude}})}),this.loadMap()}},{key:\"componentDidUpdate\",value:function(e,t){e.google!==this.props.google&&this.loadMap(),t.currentLocation!==this.state.currentLocation&&this.recenterMap()}},{key:\"loadMap\",value:function(){if(this.props&&this.props.google){var e=this.props.google.maps,t=new e.LatLng(37.7699298,-122.4469157),o=(new e.LatLng(37.7683909618184,-122.51089453697205),this.refs.map),n=r.a.findDOMNode(o),a=this.props,i=(a.initialCenter,a.zoom),s=this.state.currentLocation,c=s.lat,l=s.lng,p=(new e.LatLng(c,l),Object.assign({},{center:t,zoom:i}));this.map=new e.Map(n,p),this.state.directionsDisplay.setMap(this.map),this.calcRoute()}}},{key:\"recenterMap\",value:function(){var e=this.map,t=this.state.currentLocation,o=this.props.google.maps;if(e){var n=new o.LatLng(t.lat,t.lng);e.panTo(n)}}},{key:\"calcRoute\",value:function(){var e=this,t=this.props.google.maps,o={origin:new t.LatLng(37.7699298,-122.4469157),destination:new t.LatLng(37.7683909618184,-122.51089453697205),travelMode:t.TravelMode.DRIVING};console.log(this.state),this.state.directionsService.route(o,function(t,o){console.log(\"response: \",t),console.log(\"status: \",o),\"OK\"===o&&e.state.directionsDisplay.setDirections(t)})}},{key:\"buttonClicked\",value:function(){console.log(\"I have been clicked!\"),d.a.get(\"/test\").then(function(e){console.log(e.data)})}},{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:\"map-container\"},a.a.createElement(\"div\",{ref:\"map\",style:{width:\"70vw\",height:\"100vh\",float:\"right\"}},\"Loading map...\"),a.a.createElement(\"button\",{ref:\"directionsPanel\",style:{width:\"30vw\",height:\"100vh\"},onClick:this.buttonClicked},\"Load directions panel...kevon\"))}}]),t}(n.Component);v.defaultProps={zoom:13,initialCenter:{lat:37.774929,lng:-122.419416},centerAroundCurrentLocation:!1};var m=function(e){function t(){return Object(s.a)(this,t),Object(l.a)(this,Object(p.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){console.log(\"mounting!\"),d.a.get(\"/ping\").then(function(e){console.log(e.data)})}},{key:\"buttonClicked\",value:function(){console.log(\"I have been clicked!\"),d.a.get(\"/test\").then(function(e){console.log(e.data)})}},{key:\"render\",value:function(){return console.log(this.props),a.a.createElement(\"div\",{style:{width:\"100vw\",height:\"100vh\"}},a.a.createElement(v,{google:this.props.google}))}}]),t}(n.Component),f=Object(h.GoogleApiWrapper)({apiKey:\"AIzaSyDfaCamdV4CSw1jBTG8NZeem0YG6kguM3s\"})(m);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[21,2,1]]]);","extractedComments":[]}